name: ci/cd

# on:
#   push:
#     branches:
#       - main
on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  push_to_registry:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'release' }}
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    env:
      GITHUB_REF: ${{ github.event.workflow_run.head_commit.message }} # Override the ref
    outputs:
      image_version: ${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: iamtatat/bb-back
          tags: type=semver,pattern={{version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

  deploy:
    needs: push_to_registry
    name: Deploy to GCP
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 363.0.0"

      - name: Debug Image Version
        run: echo "Image Version = ${{ needs.push_to_registry.outputs.image_version }}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-golang-app \
            --image docker.io/iamtatat/bb-back:${{ needs.push_to_registry.outputs.image_version }} \
            --region us-central1 \
            --update-env-vars API_VERSION=${{ needs.push_to_registry.outputs.image_version }}
